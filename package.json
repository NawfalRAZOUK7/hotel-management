{
  "name": "hotel-management-system",
  "version": "1.0.0",
  "description": "Hotel Management System with QR Codes + Redis Caching + Yield Management",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    
    "redis:start": "redis-server",
    "redis:cli": "redis-cli",
    "redis:monitor": "redis-cli monitor",
    "redis:info": "redis-cli info",
    "redis:ping": "redis-cli ping",
    "redis:test": "node scripts/test-redis.js",
    "redis:health": "curl -f http://localhost:5000/health/redis",
    
    "cache:clear": "node scripts/clear-cache.js",
    "cache:warm": "node scripts/warm-cache.js",
    "cache:stats": "node scripts/cache-stats.js",
    "cache:monitor": "node scripts/monitor-cache.js",
    "cache:test": "node scripts/test-cache.js",
    
    "qr:test": "node scripts/test-qr.js",
    "qr:generate": "node scripts/generate-test-qr.js",
    "qr:validate": "node scripts/validate-qr.js",
    "qr:health": "curl -f http://localhost:5000/health/qr",
    "qr:performance": "node scripts/qr-performance-test.js",
    
    "performance:test": "node scripts/performance-test.js",
    "performance:monitor": "node scripts/performance-monitor.js",
    "performance:benchmark": "node scripts/benchmark.js",
    "performance:load-test": "node scripts/load-test.js",
    
    "setup:redis": "node scripts/setup-redis.js",
    "setup:qr": "node scripts/setup-qr.js",
    "setup:cache": "node scripts/setup-cache.js",
    "setup:all": "npm run setup:redis && npm run setup:qr && npm run setup:cache",
    
    "monitoring:start": "node scripts/start-monitoring.js",
    "monitoring:health": "node scripts/health-check.js",
    "monitoring:metrics": "curl -f http://localhost:5000/metrics",
    "monitoring:dashboard": "node scripts/monitoring-dashboard.js",
    
    "db:seed": "node scripts/seedDatabase.js",
    "db:migrate": "node scripts/migrate.js",
    "db:indexes": "node scripts/create-indexes.js",
    "db:yield-setup": "node scripts/setup-yield-management.js",
    
    "yield:start": "node scripts/start-yield-jobs.js",
    "yield:stop": "node scripts/stop-yield-jobs.js",
    "yield:test": "node scripts/test-yield-system.js",
    "yield:pricing": "node scripts/test-pricing-rules.js",
    
    "docker:build": "docker build -t hotel-management .",
    "docker:run": "docker run -p 5000:5000 -p 3001:3001 hotel-management",
    "docker:compose": "docker-compose up -d",
    "docker:compose:dev": "docker-compose -f docker-compose.yml up -d",
    "docker:logs": "docker-compose logs -f",
    "docker:stop": "docker-compose down",
    
    "health:all": "node scripts/health-check-all.js",
    "health:redis": "npm run redis:health",
    "health:qr": "npm run qr:health",
    "health:cache": "curl -f http://localhost:5000/health/cache",
    "health:db": "curl -f http://localhost:5000/health/db",
    
    "logs:app": "tail -f logs/app.log",
    "logs:redis": "tail -f logs/redis.log",
    "logs:qr": "tail -f logs/qr.log",
    "logs:cache": "tail -f logs/cache.log",
    "logs:performance": "tail -f logs/performance.log",
    
    "security:scan": "node scripts/security-scan.js",
    "security:test": "node scripts/security-test.js",
    
    "production:setup": "npm run setup:all && npm run db:indexes && npm run health:all",
    "production:deploy": "npm run production:setup && npm start",
    "production:monitor": "npm run monitoring:start",
    
    "dev:setup": "npm run setup:all && npm run db:seed && npm run cache:warm",
    "dev:reset": "npm run cache:clear && npm run db:seed",
    "dev:full-reset": "docker-compose down -v && docker-compose up -d && npm run dev:setup"
  },
  "dependencies": {
    "express": "^4.18.2",
    "mongoose": "^7.5.0",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "nodemailer": "^6.9.4",
    "multer": "^1.4.5-lts.1",
    "cors": "^2.8.5",
    "helmet": "^7.0.0",
    "express-rate-limit": "^6.8.1",
    "dotenv": "^16.3.1",
    "socket.io": "^4.7.2",
    "twilio": "^4.14.0",
    "stripe": "^12.18.0",
    "speakeasy": "^2.0.0",
    "node-cron": "^3.0.2",
    "express-validator": "^7.0.1",
    "morgan": "^1.10.0",
    "compression": "^1.7.4",
    "winston": "^3.10.0",
    "winston-daily-rotate-file": "^4.7.1",
    
    "redis": "^4.6.10",
    "ioredis": "^5.3.2",
    "redis-lock": "^0.1.4",
    
    "qrcode": "^1.5.3",
    "jsqr": "^1.4.0",
    "sharp": "^0.32.5",
    "canvas": "^2.11.2",
    
    "uuid": "^9.0.1",
    "crypto-js": "^4.1.1",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "moment-timezone": "^0.5.43",
    
    "axios": "^1.5.0",
    "node-fetch": "^3.3.2",
    
    "pdfkit": "^0.13.0",
    "excel4node": "^1.8.2",
    "csv-parser": "^3.0.0",
    "fast-csv": "^4.3.6"
  },
  "devDependencies": {
    "nodemon": "^3.0.1",
    "jest": "^29.6.2",
    "supertest": "^6.3.3",
    "supertest-session": "^4.1.0",
    
    "redis-mock": "^0.56.3",
    "mongodb-memory-server": "^8.15.1",
    
    "@types/jest": "^29.5.5",
    "@types/node": "^20.5.9",
    
    "eslint": "^8.48.0",
    "prettier": "^3.0.3",
    
    "artillery": "^2.0.1",
    "clinic": "^11.0.1",
    "autocannon": "^7.12.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "hotel-management",
    "booking-system",
    "qr-codes",
    "redis-cache",
    "yield-management",
    "real-time",
    "nodejs",
    "express",
    "mongodb",
    "socket.io"
  ],
  "author": "Nawfal Razouk",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nawfalrazouk/hotel-management-system"
  },
  "config": {
    "redis": {
      "version": "^4.6.10",
      "required": true
    },
    "qr": {
      "library": "qrcode",
      "version": "^1.5.3",
      "required": true
    },
    "cache": {
      "strategy": "redis",
      "required": true
    },
    "monitoring": {
      "enabled": true,
      "endpoints": [
        "/health",
        "/health/redis",
        "/health/qr",
        "/health/cache",
        "/metrics"
      ]
    }
  },
  "jest": {
    "testEnvironment": "node",
    "setupFilesAfterEnv": ["<rootDir>/tests/setup.js"],
    "testMatch": [
      "**/__tests__/**/*.js",
      "**/?(*.)+(spec|test).js"
    ],
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/**/*.test.js",
      "!src/tests/**"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    }
  },
  "nodemonConfig": {
    "ignore": [
      "logs/*",
      "uploads/*",
      "exports/*",
      "temp/*",
      "node_modules/*"
    ],
    "env": {
      "NODE_ENV": "development"
    }
  }
}